// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`imports-with-comments.js - flow-verify > imports-with-comments.js 1`] = `
/**
 * @flow
 */

// I am top level comment in this file.

import { type Something } from './__generated__/';
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";
import thirdParty from "third-party";
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import abc from "@core/abc";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import xyz from "@ui/xyz";

const handleChange = (value: ?string) => {}

export type AliasFoo3  = {
  givesANum(): number
};
export function givesAFoo3Obj(): AliasFoo3 {
  return {
    givesANum(): number { return 42; }
  };
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * @flow
 */
// I am top level comment in this file.

import thirdParty from "third-party";
import abc from "@core/abc";
import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";
import xyz from "@ui/xyz";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
import { type Something } from "./__generated__/";
import sameLevelRelativePath from "./sameLevelRelativePath";

const handleChange = (value: ?string) => {};

export type AliasFoo3 = {
    givesANum(): number,
};
export function givesAFoo3Obj(): AliasFoo3 {
    return {
        givesANum(): number {
            return 42;
        },
    };
}

`;

exports[`imports-with-side-effect-imports.js - flow-verify > imports-with-side-effect-imports.js 1`] = `
/**
 * @flow
 */

// I am top level comment in this file.

import thirdParty0 from "third-party0";
import something3 from "@core/something3";
import thirdDisco0 from "third-disco0";
import otherthing3 from "@core/otherthing3";
import { type Something2 } from './__generated2__/';

import "side-effect-z";

import anotherSameLevelRelativePath3 from "./anotherSameLevelRelativePath3";
import something0 from "@core/something0";
import thirdDisco1 from "third-disco1";
import { type Something3 } from './__generated3__/';
import otherthing0 from "@core/otherthing0";
import sameLevelRelativePath3 from "./sameLevelRelativePath3";
import thirdParty1 from "third-party1";
import oneLevelRelativePath1 from "../oneLevelRelativePath1";
import anotherOneLevelRelativePath1 from "../anotherOneLevelRelativePath1";

import "side-effect-y3";
import "side-effect-y1";
import "side-effect-y2";

import oneLevelRelativePath2 from "../oneLevelRelativePath2";
import anotherOneLevelRelativePath2 from "../anotherOneLevelRelativePath2";
import something2 from "@core/something2";
import thirdParty3 from "third-party3";
import anotherSameLevelRelativePath1 from "./anotherSameLevelRelativePath1";
import sameLevelRelativePath1 from "./sameLevelRelativePath1";
import otherthing2 from "@core/otherthing2";
import { type Something1 } from './__generated1__/';
import thirdDisco3 from "third-disco3";

import "side-effect-x";
import anotherSameLevelRelativePath2 from "./anotherSameLevelRelativePath2";
import sameLevelRelativePath2 from "./sameLevelRelativePath2";
import something1 from "@core/something1";
import { type Something0 } from './__generated0__/';
import oneLevelRelativePath3 from "../oneLevelRelativePath3";
import anotherOneLevelRelativePath3 from "../anotherOneLevelRelativePath3";
import otherthing1 from "@core/otherthing1";
import thirdDisco2 from "third-disco2";
import thirdParty2 from "third-party2";

import { Component } from "@angular/core";

const handleChange = (value: ?string) => {}

export type AliasFoo3  = {
  givesANum(): number
};
export function givesAFoo3Obj(): AliasFoo3 {
  return {
    givesANum(): number { return 42; }
  };
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * @flow
 */
// I am top level comment in this file.

import thirdDisco0 from "third-disco0";
import thirdParty0 from "third-party0";
import otherthing3 from "@core/otherthing3";
import something3 from "@core/something3";
import { type Something2 } from "./__generated2__/";
import "side-effect-z";
import thirdDisco1 from "third-disco1";
import thirdParty1 from "third-party1";
import otherthing0 from "@core/otherthing0";
import something0 from "@core/something0";
import anotherOneLevelRelativePath1 from "../anotherOneLevelRelativePath1";
import oneLevelRelativePath1 from "../oneLevelRelativePath1";
import { type Something3 } from "./__generated3__/";
import anotherSameLevelRelativePath3 from "./anotherSameLevelRelativePath3";
import sameLevelRelativePath3 from "./sameLevelRelativePath3";
import "side-effect-y3";
import "side-effect-y1";
import "side-effect-y2";
import thirdDisco3 from "third-disco3";
import thirdParty3 from "third-party3";
import otherthing2 from "@core/otherthing2";
import something2 from "@core/something2";
import anotherOneLevelRelativePath2 from "../anotherOneLevelRelativePath2";
import oneLevelRelativePath2 from "../oneLevelRelativePath2";
import { type Something1 } from "./__generated1__/";
import anotherSameLevelRelativePath1 from "./anotherSameLevelRelativePath1";
import sameLevelRelativePath1 from "./sameLevelRelativePath1";
import "side-effect-x";
import { Component } from "@angular/core";
import thirdDisco2 from "third-disco2";
import thirdParty2 from "third-party2";
import otherthing1 from "@core/otherthing1";
import something1 from "@core/something1";
import anotherOneLevelRelativePath3 from "../anotherOneLevelRelativePath3";
import oneLevelRelativePath3 from "../oneLevelRelativePath3";
import { type Something0 } from "./__generated0__/";
import anotherSameLevelRelativePath2 from "./anotherSameLevelRelativePath2";
import sameLevelRelativePath2 from "./sameLevelRelativePath2";

const handleChange = (value: ?string) => {};

export type AliasFoo3 = {
    givesANum(): number,
};
export function givesAFoo3Obj(): AliasFoo3 {
    return {
        givesANum(): number {
            return 42;
        },
    };
}

`;

exports[`imports-with-type-and-value-imports.js - flow-verify > imports-with-type-and-value-imports.js 1`] = `
/**
 * @flow
 */

import type {Foo} from './foo';
import {fooValue} from './foo';
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * @flow
 */

import { fooValue, type Foo } from "./foo";

`;
