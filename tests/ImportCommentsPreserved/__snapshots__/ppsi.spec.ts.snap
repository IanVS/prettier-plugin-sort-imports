// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`import-comments-document-top-test1.ts - typescript-verify > import-comments-document-top-test1.ts 1`] = `
// This is part of multiple-lines at document-top
// Second line followed by a gap

import b from "b";
import a from "a";
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// This is part of multiple-lines at document-top
// Second line followed by a gap

import a from "a";
import b from "b";

`;

exports[`import-comments-document-top-test2.ts - typescript-verify > import-comments-document-top-test2.ts 1`] = `
/**
 * This is part of multiple-lines at document-top
 * Second line of text, comment is followed by a gap (gap gets eaten)
 */

import b from "b";
import a from "a";
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * This is part of multiple-lines at document-top
 * Second line of text, comment is followed by a gap (gap gets eaten)
 */

import a from "a";
import b from "b";

`;

exports[`import-comments-document-top-test3.ts - typescript-verify > import-comments-document-top-test3.ts 1`] = `
/**
 * This comment is before the whole block,
 * it is not attached to the following import.
 */

import b from "b";
import a from "a";
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * This comment is before the whole block,
 * it is not attached to the following import.
 */

import a from "a";
import b from "b";

`;

exports[`import-comments-outer-comments-block-comments.ts - typescript-verify > import-comments-outer-comments-block-comments.ts 1`] = `
// Loose leading comment before imports (should not be dragged down with B)

/* Leading comment before B */
import B from "b"; /* Trailing comment on same-line as B (babel doesn't like CommentBlocks on same-line as anything else, so it will be shifted to a clean line) */
/* Trailing comment on first line after B (This is treated as a leading comment for next import A!) */


/* Leading comment before A */
import A from "a"; /* Trailing comment on same-line as A (babel doesn't like CommentBlocks on same-line as anything else, so it will be shifted to a clean line) */
/* Trailing comment on first line after A (will initially, because this is "close" to last-import 'a' */

// Loose trailing comment after imports (should not be dragged up with A)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Loose leading comment before imports (should not be dragged down with B)

/* Trailing comment on same-line as B (babel doesn't like CommentBlocks on same-line as anything else, so it will be shifted to a clean line) */

/* Trailing comment on first line after B (This is treated as a leading comment for next import A!) */

/* Leading comment before A */
import A from "a";
/* Trailing comment on same-line as A (babel doesn't like CommentBlocks on same-line as anything else, so it will be shifted to a clean line) */

/* Trailing comment on first line after A (will initially, because this is "close" to last-import 'a' */

/* Leading comment before B */
import B from "b";

// Loose trailing comment after imports (should not be dragged up with A)

`;

exports[`import-comments-outer-comments-single-line.ts - typescript-verify > import-comments-outer-comments-single-line.ts 1`] = `
// Loose leading comment before imports (should not be dragged down with B)

// Leading comment before B
import B from "b"; // Trailing comment on same-line as B
// Trailing comment on first line after B (This is treated as a leading comment for next import A!)

// Leading comment before A
import A from "a"; // Trailing comment on same-line as A
// Trailing comment on first line after A (will follow A initially, because this is "close" to last-import 'a')

// Loose trailing comment after imports (should not be dragged up with A)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Loose leading comment before imports (should not be dragged down with B)

// Trailing comment on first line after B (This is treated as a leading comment for next import A!)
// Leading comment before A
import A from "a"; // Trailing comment on same-line as A
// Trailing comment on first line after A (will follow A initially, because this is "close" to last-import 'a')

// Leading comment before B
import B from "b"; // Trailing comment on same-line as B

// Loose trailing comment after imports (should not be dragged up with A)

`;

exports[`import-comments-specifier-leading-and-trailing.ts - typescript-verify > import-comments-specifier-leading-and-trailing.ts 1`] = `
// Top-of-file

import {
    // j3 leading single-line-comment 1
    // j3 leading single-line-comment 2
    j3, // j3 same-line single-line-comment
    j2, // j2 same-line single-line-comment
} from "j";

import {
    /** i3 leading comment
      */ i3,
    i2, /* i2 same-line will be treated as leading comment for i1 */
    i1, /* i1 same-line will be treated as trailing comment for i1 */
} from "i";

import {
    h4, // h4 same-line single-line-comment
    // h3 leading single-line-comment
    h3, // h3 same-line single-line-comment
    h2, // h2 same-line single-line-comment
    h1, // h1 same-line single-line-comment
} from "h";

// Rest of file below here
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Top-of-file

import {
    h1, // h1 same-line single-line-comment
    h2, // h2 same-line single-line-comment
    // h3 leading single-line-comment
    h3, // h3 same-line single-line-comment
    h4, // h4 same-line single-line-comment
} from "h";
import {
    i1,
    /* i1 same-line will be treated as trailing comment for i1 */
    i2,
    /* i2 same-line will be treated as leading comment for i1 */

    /** i3 leading comment
     */
    i3,
} from "i";
import {
    j2, // j2 same-line single-line-comment
    // j3 leading single-line-comment 1
    // j3 leading single-line-comment 2
    j3, // j3 same-line single-line-comment
} from "j";

// Rest of file below here

`;
