// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`import-with-side-effect-imports.ts - typescript-verify > import-with-side-effect-imports.ts 1`] = `
import thirdParty0 from "third-party0";
import something3 from "@core/something3";
import thirdDisco0 from "third-disco0";
import otherthing3 from "@core/otherthing3";

import "side-effect-z";

import anotherSameLevelRelativePath3 from "./anotherSameLevelRelativePath3";
import something0 from "@core/something0";
import thirdDisco1 from "third-disco1";
import otherthing0 from "@core/otherthing0";
import sameLevelRelativePath3 from "./sameLevelRelativePath3";
import thirdParty1 from "third-party1";
import oneLevelRelativePath1 from "../oneLevelRelativePath1";
import anotherOneLevelRelativePath1 from "../anotherOneLevelRelativePath1";

import "side-effect-y3";
import "side-effect-y1";
import "side-effect-y2";

import oneLevelRelativePath2 from "../oneLevelRelativePath2";
import anotherOneLevelRelativePath2 from "../anotherOneLevelRelativePath2";
import something2 from "@core/something2";
import thirdParty3 from "third-party3";
import anotherSameLevelRelativePath1 from "./anotherSameLevelRelativePath1";
import sameLevelRelativePath1 from "./sameLevelRelativePath1";
import otherthing2 from "@core/otherthing2";
import thirdDisco3 from "third-disco3";

import "side-effect-x";
import anotherSameLevelRelativePath2 from "./anotherSameLevelRelativePath2";
import sameLevelRelativePath2 from "./sameLevelRelativePath2";
import something1 from "@core/something1";
import oneLevelRelativePath3 from "../oneLevelRelativePath3";
import anotherOneLevelRelativePath3 from "../anotherOneLevelRelativePath3";
import otherthing1 from "@core/otherthing1";
import thirdDisco2 from "third-disco2";
import thirdParty2 from "third-party2";

import { Component } from "@angular/core";

@Component({
  selector: "app-root",
  templateUrl: "./app.component.html",
  styleUrls: ["./app.component.css"]
})
export class AppComponent extends BaseComponent {
  title = "ng-prettier";

  override get text(): string {
    return isEmpty(this.title) ? "" : this.title;
  }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import thirdDisco0 from "third-disco0";
import thirdParty0 from "third-party0";
import otherthing3 from "@core/otherthing3";
import something3 from "@core/something3";
import "side-effect-z";
import thirdDisco1 from "third-disco1";
import thirdParty1 from "third-party1";
import otherthing0 from "@core/otherthing0";
import something0 from "@core/something0";
import anotherOneLevelRelativePath1 from "../anotherOneLevelRelativePath1";
import oneLevelRelativePath1 from "../oneLevelRelativePath1";
import anotherSameLevelRelativePath3 from "./anotherSameLevelRelativePath3";
import sameLevelRelativePath3 from "./sameLevelRelativePath3";
import "side-effect-y3";
import "side-effect-y1";
import "side-effect-y2";
import thirdDisco3 from "third-disco3";
import thirdParty3 from "third-party3";
import otherthing2 from "@core/otherthing2";
import something2 from "@core/something2";
import anotherOneLevelRelativePath2 from "../anotherOneLevelRelativePath2";
import oneLevelRelativePath2 from "../oneLevelRelativePath2";
import anotherSameLevelRelativePath1 from "./anotherSameLevelRelativePath1";
import sameLevelRelativePath1 from "./sameLevelRelativePath1";
import "side-effect-x";
import { Component } from "@angular/core";
import thirdDisco2 from "third-disco2";
import thirdParty2 from "third-party2";
import otherthing1 from "@core/otherthing1";
import something1 from "@core/something1";
import anotherOneLevelRelativePath3 from "../anotherOneLevelRelativePath3";
import oneLevelRelativePath3 from "../oneLevelRelativePath3";
import anotherSameLevelRelativePath2 from "./anotherSameLevelRelativePath2";
import sameLevelRelativePath2 from "./sameLevelRelativePath2";

@Component({
    selector: "app-root",
    templateUrl: "./app.component.html",
    styleUrls: ["./app.component.css"],
})
export class AppComponent extends BaseComponent {
    title = "ng-prettier";

    override get text(): string {
        return isEmpty(this.title) ? "" : this.title;
    }
}

`;

exports[`imports-with-comments.ts - typescript-verify > imports-with-comments.ts 1`] = `
import z from 'z';
import { isEmpty } from "lodash-es";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";
import thirdParty from "third-party";
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import abc from "@core/abc";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import xyz from "@ui/xyz";

import { Component } from "@angular/core";

@Component({
  selector: "app-root",
  templateUrl: "./app.component.html",
  styleUrls: ["./app.component.css"]
})
export class AppComponent extends BaseComponent {
  title = "ng-prettier";

  override get text(): string {
    return isEmpty(this.title) ? "" : this.title;
  }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import { Component } from "@angular/core";
import { isEmpty } from "lodash-es";
import thirdParty from "third-party";
import z from "z";
import abc from "@core/abc";
import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";
import xyz from "@ui/xyz";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";

@Component({
    selector: "app-root",
    templateUrl: "./app.component.html",
    styleUrls: ["./app.component.css"],
})
export class AppComponent extends BaseComponent {
    title = "ng-prettier";

    override get text(): string {
        return isEmpty(this.title) ? "" : this.title;
    }
}

`;

exports[`imports-with-type-and-value-imports.js - typescript-verify > imports-with-type-and-value-imports.js 1`] = `
import type {Foo} from './foo';
import {fooValue} from './foo';
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import { fooValue, type Foo } from "./foo";

`;

exports[`imports-with-unsorted-modules.ts - typescript-verify > imports-with-unsorted-modules.ts 1`] = `
import z from 'z';
import { isEmpty, concat, flatten } from "lodash-es";
import threeLevelRelativePathA, { nonDefaultModuleC, nonDefaultModuleA, nonDefaultModuleB } from "../../../threeLevelRelativePathA";
import * as allThreeLevelRelativePathBModules from "../../../threeLevelRelativePathB";
import threeLevelRelativePathC, {
  nonDefaultModuleC as nonConflictingModuleNameC,
  nonDefaultModuleA as nonConflictingModuleNameA,
  nonDefaultModuleB as nonConflictingModuleNameB,
  nonDefaultModuleE,
  nonDefaultModuleD
} from "../../../threeLevelRelativePathC";
import sameLevelRelativePath from "./sameLevelRelativePath";
import thirdParty from "third-party";
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import abc from "@core/abc";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import xyz from "@ui/xyz";

import { Component } from "@angular/core";

@Component({
  selector: "app-root",
  templateUrl: "./app.component.html",
  styleUrls: ["./app.component.css"]
})
export class AppComponent {
  title = "ng-prettier";

  get text(): string {
    return isEmpty(this.title) ? "" : this.title;
  }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import { Component } from "@angular/core";
import { isEmpty, concat, flatten } from "lodash-es";
import thirdParty from "third-party";
import z from "z";
import abc from "@core/abc";
import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";
import xyz from "@ui/xyz";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePathA, {
    nonDefaultModuleC,
    nonDefaultModuleA,
    nonDefaultModuleB,
} from "../../../threeLevelRelativePathA";
import * as allThreeLevelRelativePathBModules from "../../../threeLevelRelativePathB";
import threeLevelRelativePathC, {
    nonDefaultModuleC as nonConflictingModuleNameC,
    nonDefaultModuleA as nonConflictingModuleNameA,
    nonDefaultModuleB as nonConflictingModuleNameB,
    nonDefaultModuleE,
    nonDefaultModuleD,
} from "../../../threeLevelRelativePathC";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";

@Component({
    selector: "app-root",
    templateUrl: "./app.component.html",
    styleUrls: ["./app.component.css"],
})
export class AppComponent {
    title = "ng-prettier";

    get text(): string {
        return isEmpty(this.title) ? "" : this.title;
    }
}

`;
