// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`import-export-in-between.ts - typescript-verify > import-export-in-between.ts 1`] = `
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";
import thirdParty from "third-party";
export { random } from './random';
import c from 'c';
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import a from 'a';
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
export default {
    title: 'hello',
};
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import x from 'x';

function add(a:number,b:number) {
  return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import a from "a";
import c from "c";
import thirdParty from "third-party";
import x from "x";

import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";

import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";

export { random } from "./random";

export default {
    title: "hello",
};

function add(a: number, b: number) {
    return a + b;
}

`;

exports[`import-export-in-between-side-effect.ts - typescript-verify > import-export-in-between-side-effect.ts 1`] = `
import "side-effect";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";
import thirdParty from "third-party";
export { random } from './random';
import c from 'c';
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import a from 'a';
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
export default {
    title: 'hello',
};
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import x from 'x';

function add(a:number,b:number) {
  return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import "side-effect";

import a from "a";
import c from "c";
import thirdParty from "third-party";
import x from "x";

import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";

import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";

export { random } from "./random";

export default {
    title: "hello",
};

function add(a: number, b: number) {
    return a + b;
}

`;

exports[`import-export-only.ts - typescript-verify > import-export-only.ts 1`] = `
import React from 'react';
export const a = 1;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import React from "react";

export const a = 1;

`;

exports[`imports-with-comments.ts - typescript-verify > imports-with-comments.ts 1`] = `
// I am top level comment in this file.
// I am second line of top level comment in this file.

import './commands';

// Comment
// Comment

function add(a:number,b:number) {
    return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// I am top level comment in this file.
// I am second line of top level comment in this file.

import "./commands";

// Comment
// Comment

function add(a: number, b: number) {
    return a + b;
}

`;

exports[`imports-with-comments-and-third-party.ts - typescript-verify > imports-with-comments-and-third-party.ts 1`] = `
// I am top level comment in this file.
// I am second line of top level comment in this file.

import './commands';
import React from 'react';
// Comment
// Comment

function add(a:number,b:number) {
    return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// I am top level comment in this file.
// I am second line of top level comment in this file.

import "./commands";

import React from "react";

// Comment
// Comment

function add(a: number, b: number) {
    return a + b;
}

`;

exports[`imports-with-comments-on-top.ts - typescript-verify > imports-with-comments-on-top.ts 1`] = `
// I am top level comment in this file.
// I am second line of top level comment in this file.

import z from 'z';
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";
import thirdParty from "third-party";
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import abc from "@core/abc";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import xyz from "@ui/xyz";
import qwerty from "@server/qwerty";

function add(a:number,b:number) {
  return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// I am top level comment in this file.
// I am second line of top level comment in this file.

import thirdParty from "third-party";
import z from "z";

import abc from "@core/abc";
import otherthing from "@core/otherthing";
import qwerty from "@server/qwerty";
import something from "@server/something";
import component from "@ui/hello";
import xyz from "@ui/xyz";

import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
import sameLevelRelativePath from "./sameLevelRelativePath";

function add(a: number, b: number) {
    return a + b;
}

`;

exports[`imports-with-file-level-comments.ts - typescript-verify > imports-with-file-level-comments.ts 1`] = `
//@ts-ignore
// I am file top level comments

import threeLevelRelativePath from "../../../threeLevelRelativePath";
// I am stick to sameLevelRelativePath
import sameLevelRelativePath from "./sameLevelRelativePath";
// I am stick to third party comment
import thirdParty from "third-party";
// leading comment
import {
    random // inner comment
} from './random';
// leading comment for export from random
export {
    random // inner comment
} from './random';
import c from 'c';
import oneLevelRelativePath from "../oneLevelRelativePath";
import otherthing from "@core/otherthing";
import a from 'a';
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
export default {
    title: 'hello',
};
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import x from 'x';

// I am function comment

function add(a:number,b:number) {
  return a + b; // I am inside function
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//@ts-ignore
// I am file top level comments

import a from "a";
import c from "c";
// I am stick to third party comment
import thirdParty from "third-party";
import x from "x";

import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";

import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import threeLevelRelativePath from "../../../threeLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import oneLevelRelativePath from "../oneLevelRelativePath";
// leading comment
import {
    random, // inner comment
} from "./random";
// I am stick to sameLevelRelativePath
import sameLevelRelativePath from "./sameLevelRelativePath";

// leading comment for export from random
export {
    random, // inner comment
} from "./random";

export default {
    title: "hello",
};

// I am function comment

function add(a: number, b: number) {
    return a + b; // I am inside function
}

`;

exports[`imports-with-interpreter-directive.ts - typescript-verify > imports-with-interpreter-directive.ts 1`] = `
#!/usr/bin/env node
import otherthing from "@core/otherthing";
import abc from "@core/abc";
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
import xyz from "@ui/xyz";
import qwerty from "@server/qwerty";

function add(a:number,b:number) {
    return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#!/usr/bin/env node
import abc from "@core/abc";
import otherthing from "@core/otherthing";
import qwerty from "@server/qwerty";
import something from "@server/something";
import component from "@ui/hello";
import xyz from "@ui/xyz";

import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import twoLevelRelativePath from "../../twoLevelRelativePath";

function add(a: number, b: number) {
    return a + b;
}

`;

exports[`imports-with-side-effect-imports.ts - typescript-verify > imports-with-side-effect-imports.ts 1`] = `
// I am top level comment in this file.

import thirdParty0 from "third-party0";
import something3 from "@core/something3";
import thirdDisco0 from "third-disco0";
import otherthing3 from "@core/otherthing3";
import { type Something2 } from './__generated2__/';

import "side-effect-z";

import anotherSameLevelRelativePath3 from "./anotherSameLevelRelativePath3";
import something0 from "@core/something0";
import thirdDisco1 from "third-disco1";
import { type Something3 } from './__generated3__/';
import otherthing0 from "@core/otherthing0";
import sameLevelRelativePath3 from "./sameLevelRelativePath3";
import thirdParty1 from "third-party1";
import oneLevelRelativePath1 from "../oneLevelRelativePath1";
import anotherOneLevelRelativePath1 from "../anotherOneLevelRelativePath1";

import "side-effect-y3";
import "side-effect-y1";
import "side-effect-y2";

import oneLevelRelativePath2 from "../oneLevelRelativePath2";
import anotherOneLevelRelativePath2 from "../anotherOneLevelRelativePath2";
import something2 from "@core/something2";
import thirdParty3 from "third-party3";
import anotherSameLevelRelativePath1 from "./anotherSameLevelRelativePath1";
import sameLevelRelativePath1 from "./sameLevelRelativePath1";
import otherthing2 from "@core/otherthing2";
import { type Something1 } from './__generated1__/';
import thirdDisco3 from "third-disco3";

import "side-effect-x";
import anotherSameLevelRelativePath2 from "./anotherSameLevelRelativePath2";
import sameLevelRelativePath2 from "./sameLevelRelativePath2";
import something1 from "@core/something1";
import { type Something0 } from './__generated0__/';
import oneLevelRelativePath3 from "../oneLevelRelativePath3";
import anotherOneLevelRelativePath3 from "../anotherOneLevelRelativePath3";
import otherthing1 from "@core/otherthing1";
import thirdDisco2 from "third-disco2";
import thirdParty2 from "third-party2";

import { Component } from "@angular/core";

export type AliasFoo3  = {
  givesANum(): number
};
export function givesAFoo3Obj(): AliasFoo3 {
  return {
    givesANum(): number { return 42; }
  };
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// I am top level comment in this file.

import thirdDisco0 from "third-disco0";
import thirdParty0 from "third-party0";

import otherthing3 from "@core/otherthing3";
import something3 from "@core/something3";

import { type Something2 } from "./__generated2__/";

import "side-effect-z";

import thirdDisco1 from "third-disco1";
import thirdParty1 from "third-party1";

import otherthing0 from "@core/otherthing0";
import something0 from "@core/something0";

import anotherOneLevelRelativePath1 from "../anotherOneLevelRelativePath1";
import oneLevelRelativePath1 from "../oneLevelRelativePath1";
import { type Something3 } from "./__generated3__/";
import anotherSameLevelRelativePath3 from "./anotherSameLevelRelativePath3";
import sameLevelRelativePath3 from "./sameLevelRelativePath3";

import "side-effect-y3";
import "side-effect-y1";
import "side-effect-y2";

import thirdDisco3 from "third-disco3";
import thirdParty3 from "third-party3";

import otherthing2 from "@core/otherthing2";
import something2 from "@core/something2";

import anotherOneLevelRelativePath2 from "../anotherOneLevelRelativePath2";
import oneLevelRelativePath2 from "../oneLevelRelativePath2";
import { type Something1 } from "./__generated1__/";
import anotherSameLevelRelativePath1 from "./anotherSameLevelRelativePath1";
import sameLevelRelativePath1 from "./sameLevelRelativePath1";

import "side-effect-x";

import { Component } from "@angular/core";
import thirdDisco2 from "third-disco2";
import thirdParty2 from "third-party2";

import otherthing1 from "@core/otherthing1";
import something1 from "@core/something1";

import anotherOneLevelRelativePath3 from "../anotherOneLevelRelativePath3";
import oneLevelRelativePath3 from "../oneLevelRelativePath3";
import { type Something0 } from "./__generated0__/";
import anotherSameLevelRelativePath2 from "./anotherSameLevelRelativePath2";
import sameLevelRelativePath2 from "./sameLevelRelativePath2";

export type AliasFoo3 = {
    givesANum(): number;
};
export function givesAFoo3Obj(): AliasFoo3 {
    return {
        givesANum(): number {
            return 42;
        },
    };
}

`;

exports[`imports-without-third-party.ts - typescript-verify > imports-without-third-party.ts 1`] = `
// I am top level comment

import otherthing from "@core/otherthing";
import abc from "@core/abc";
// I am comment
import twoLevelRelativePath from "../../twoLevelRelativePath";
import component from "@ui/hello";
import fourLevelRelativePath from "../../../../fourLevelRelativePath";
import something from "@server/something";
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// I am top level comment

import abc from "@core/abc";
import otherthing from "@core/otherthing";
import something from "@server/something";
import component from "@ui/hello";

import fourLevelRelativePath from "../../../../fourLevelRelativePath";
// I am comment
import twoLevelRelativePath from "../../twoLevelRelativePath";

`;

exports[`no-import-export.ts - typescript-verify > no-import-export.ts 1`] = `
function add(a:number,b:number) {
    return a + b;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
function add(a: number, b: number) {
    return a + b;
}

`;

exports[`one-import.ts - typescript-verify > one-import.ts 1`] = `
// This example support/index.js is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.js using ES2015 syntax:
import './commands';

// Alternatively you can use CommonJS syntax:
// require('./commands')
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// This example support/index.js is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.js using ES2015 syntax:
import "./commands";

// Alternatively you can use CommonJS syntax:
// require('./commands')

`;
